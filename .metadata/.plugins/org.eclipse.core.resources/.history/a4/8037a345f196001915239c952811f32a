<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">

	<!-- 注册自定义Realm -->
	<bean class="com.zpl.realm.MyRealm" id="myRealm">
	</bean>
	<!-- 定义凭证匹配器 -->
	<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher" >
		<!-- #散列算法 -->
		<property name="hashAlgorithmName" value="md5"></property>
		<!-- #散列次数 -->
		<property name="hashIterations" value="1024"></property>
	</bean>
	<!-- 注册SecurityManager -->
	<bean class="org.apache.shiro.web.mgt.DefaultWebSecurityManager"
		id="securityManager">
		<!-- 配置自定义Realm -->
		<property name="realm" ref="myRealm" />
	</bean>

	<!-- 注册ShiroFilterFactoryBean 注意id必须和web.xml中注册的targetBeanName的值一致 -->
	<bean class="org.apache.shiro.spring.web.ShiroFilterFactoryBean"
		id="shiro">
		<!-- 注册SecurityManager -->
		<property name="securityManager" ref="securityManager" />
		<!-- 登录地址 如果用户请求的的地址是 login.do 那么会对该地址认证 -->
		<property name="loginUrl" value="/login.do" />
		<!-- 登录成功的跳转地址 -->
		<property name="successUrl" value="/main" />
		<!-- 访问未授权的页面跳转的地址 -->
		<property name="unauthorizedUrl" value="/jsp/refuse.jsp" />
		<!-- 设置 过滤器链 -->
		<property name="filterChainDefinitions">
			<value>
				<!--加载顺序从上往下。 authc需要认证 anon可以匿名访问的资源 -->
				/ = anon
				/login = anon
				/images/** = anon
				/css/** = anon
				/js/** = anon
				/lib/** = anon
				/login.do = authc
				/** = authc
			</value>
		</property>
	</bean>

</beans>
